security:
    # Configuración para hashear contraseñas
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Proveedor de usuarios basado en la entidad Usuarios y la propiedad nick
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Usuarios
                property: nick  # Se usa el nick en lugar del email

    firewalls:
        # Firewall para el login con nick y contrasenia
        api_login:
            pattern: ^/api/usuarios/login
            stateless: true
            json_login:
                check_path: /api/usuarios/login
                username_path: nick
                password_path: contrasenia
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall para proteger las rutas de la API con JWT
        api:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            jwt: ~

    # Control de acceso a rutas
    access_control:
        - { path: ^/api/usuarios/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/usuarios/registro, roles: PUBLIC_ACCESS }
        - { path: ^/api/carritoproductos/carrito/agregar, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/all, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/bobobo, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/dragonball, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/doraemon, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/pokemon, roles: PUBLIC_ACCESS }
        - { path: ^/api/productos/kimetsu, roles: PUBLIC_ACCESS }
#        - { path: ^/api/carritoproductos/carrito/agregar, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10

